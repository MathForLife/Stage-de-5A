function J=compute_energy_histo(u,A,B,lambda,beta)
%% Calcul la fonction coût à minimiser
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INPUTS:
% u: le masque binaire associé à l'image I
Si I est de dimension [m,n] alors u est un vecteur de dimension [m*n,1]
% A: Opérateur associé à la fonction g1 (matrice de dimension [Nbins(1),m*n]
% B: Opérateur associé à la fonction g0 (matrice de dimension [Nbins(2),m*n]
% lambda: Paramètre permetant de contrôler l'attache aux données et la régularisation de la fonction
% mu: Estimation du ratio \Omega_1/\Omega
TV=norm_gr
TV=sum(sum(norm_eps(gradx(u),grady(u),0)));
J_h1=sum(abs(sum(sum(u.*g1,1),2)),3);
J_h0=sum(abs(sum(sum((1-u).*g0,1),2)),3);
J=TV+lambda/beta*J_h1+lambda/(1-beta)*J_h0;

end